/* global module:false */
var _ = require( 'lodash' );

module.exports = function( grunt ){

  var jadedatas = grunt.config.get('jadedatas'),
      langs = grunt.config.get('langs');

  var treeJSON,
      jadeVars = {};

  var loop = function( lang ) {

    var key = lang,
        defaultLang = lang,
        file = "tree-"+lang+".json",
        datasJson = {};

    if( lang === '' ){
      key = 'home';
      defaultLang = grunt.file.readYAML( 'locales/site.yaml' ).defaultLang;

      file = "tree.json";
      datasJson = grunt.util._.extend( datasJson, jadedatas[defaultLang] );

      // var urls = _.clone( datasJson.url );
      // _.each( urls, function( path, key ){
      //   urls[ key ] = defaultLang+'/'+path;
      // });

      // datasJson.url = urls;
    }
    else {
      datasJson = grunt.util._.extend( datasJson, jadedatas[lang] );
    }

    treeJSON = grunt.file.readJSON( file );

    jadeVars[ key ] = grunt.util._.extend({
      projectName: "<%= package.title %>",
      tree: treeJSON,
      treeFile: "index"
    }, datasJson );
  };

  grunt.registerTask( 'treeview', function(){

    // register a task te delete the tree file once its used
    grunt.registerTask( 'cleanTreeJSON', 'remove the tree.json file generated by grunt-tree', function(){
      grunt.file.delete( 'tree.json' );

      _.each( langs, function( lang ){
        grunt.file.delete( "tree-"+lang+".json" );
      });
    } );

    grunt.registerTask('readJSON', "get the treeview JSON", function(){

      // Global
      loop( '' );

      // Locales
      _.each( langs, function( lang ){
        loop( lang );
      });

    });

    grunt.registerTask( 'runTree', '', function() {

      _.each( jadeVars, function( data, lang ){

        var dest = lang === 'home' ? "<%= build %>/index.html" : dest = "<%= build %>/"+lang+"/index.html";

        // console.log( data );

        grunt.config.set('jade.tree-'+lang, {
          files: [{
            src: grunt.file.exists("pages/_layout/tree.jade") ? "pages/_layout/tree.jade" : "tree.jade",
            dest: dest
          }],
          options: {
            data: data,
            pretty: true,
            selfClose: true,
            compileDebug: false
          }
        });

        grunt.task.run(['jade:tree-'+lang]);
      });


    });

    grunt.task.run( [
      'tree',
      'readJSON',
      'runTree',
      'cleanTreeJSON'
    ] );

  });

};
